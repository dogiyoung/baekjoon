#include <iostream>
#include <vector>
#include<algorithm>
#include <string>
#include <queue> 
#include <stack>
using namespace std;

int arr[101][10001];

int main() {
	ios::sync_with_stdio(false);
	cin.tie(NULL);

	int n, k, w, value;

	cin >> n >> k;

	vector<pair<int, int>>v;

	for (int i = 0; i < n; i++) {
		cin >> w >> value;

		v.push_back(make_pair(w, value));
	}
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= k; j++) {
			int curweight = v[i - 1].first;
			int curvalue = v[i - 1].second;

			if (curweight <= j) {
				arr[i][j] = max(arr[i - 1][j], arr[i - 1][j - curweight] + curvalue);
			}
			else
				arr[i][j] = arr[i - 1][j];
		}
	}
	cout << arr[n][k];
	
}